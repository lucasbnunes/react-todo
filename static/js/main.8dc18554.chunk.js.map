{"version":3,"sources":["Input.js","TaskList.js","App.js","index.js"],"names":["Input","value","onChange","text","onClick","placeholder","inputRef","useRef","onSubmit","event","current","focus","preventDefault","handleSubmit","className","ref","TaskList","tasks","deleteTask","enableEdit","editIndex","handleEdit","disableEdit","finishTask","areFinished","filter","task","finished","map","id","onBlur","autoFocus","App","useState","taskInput","setTaskInput","setTasks","taskBeingEdited","setTaskBeingEdited","handleChange","target","newTasks","index","editTask","useEffect","localTasks","localStorage","getItem","JSON","parse","setItem","stringify","newobj","length","prevTasks","prevTask","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8dc18554.chunk.js","sourcesContent":["import React, { useRef } from 'react';\r\nimport { HiPlus } from 'react-icons/hi';\r\nimport './Input.css';\r\n\r\nfunction Input({ value, text, onChange, onClick, placeholder }) {\r\n  const inputRef = useRef();\r\n\r\n  function handleSubmit(event) {\r\n    inputRef.current.focus();\r\n    event.preventDefault();\r\n  }\r\n  return (\r\n    <form onSubmit={(event) => handleSubmit(event)} className=\"Input\">\r\n      <div className=\"Input__searchbar\">\r\n        <input\r\n          ref={inputRef}\r\n          value={value}\r\n          onChange={onChange}\r\n          placeholder={placeholder}\r\n        />\r\n        <button onClick={onClick}>\r\n          <HiPlus />\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React, { useRef } from 'react';\r\nimport { MdDelete, MdDone } from 'react-icons/md';\r\nimport './TaskList.css';\r\n\r\nfunction TaskList({\r\n  tasks,\r\n  deleteTask,\r\n  enableEdit,\r\n  editIndex,\r\n  handleEdit,\r\n  disableEdit,\r\n  finishTask,\r\n  areFinished,\r\n}) {\r\n  const inputRef = useRef();\r\n\r\n  if (areFinished) {\r\n    return (\r\n      <div className=\"TaskList --finished\">\r\n        {tasks\r\n          .filter((task) => task.finished)\r\n          .map((task) => {\r\n            return (\r\n              <div className=\"TaskList__row\" key={task.id}>\r\n                <span className=\"TaskList__text\" ref={inputRef}>\r\n                  {task.task}\r\n                </span>\r\n                <div className=\"TaskList__icons\">\r\n                  <div></div>\r\n                  <MdDelete onClick={() => deleteTask(task.id)} />\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"TaskList\">\r\n      {tasks\r\n        .filter((task) => !task.finished)\r\n        .map((task) => {\r\n          if (task.id === editIndex) {\r\n            return (\r\n              <div className=\"TaskList__row\" key={task.id}>\r\n                <input\r\n                  value={task.task}\r\n                  onChange={handleEdit}\r\n                  className=\"TaskList__text\"\r\n                  onBlur={disableEdit}\r\n                  autoFocus={true}\r\n                />\r\n                <div className=\"TaskList__icons\"></div>\r\n              </div>\r\n            );\r\n          }\r\n\r\n          return (\r\n            <div className=\"TaskList__row\" key={task.id}>\r\n              <span\r\n                className=\"TaskList__text\"\r\n                ref={inputRef}\r\n                onClick={() => enableEdit(task.id, inputRef)}\r\n              >\r\n                {task.task}\r\n              </span>\r\n              <div className=\"TaskList__icons\">\r\n                <MdDone onClick={() => finishTask(task.id)} />\r\n                <MdDelete onClick={() => deleteTask(task.id)} />\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskList;\r\n","import { useEffect, useState } from 'react';\nimport Input from './Input';\nimport TaskList from './TaskList';\nimport './App.css';\n\nfunction App() {\n  const [taskInput, setTaskInput] = useState('');\n  const [tasks, setTasks] = useState([]);\n  const [taskBeingEdited, setTaskBeingEdited] = useState(null);\n\n  useEffect(() => {\n    const localTasks = localStorage.getItem('tasks');\n\n    if (localTasks) {\n      setTasks(JSON.parse(localTasks));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n  function handleChange({ target }) {\n    if (taskBeingEdited !== null) {\n      const newTasks = [...tasks];\n\n      newTasks[taskBeingEdited] = target.value;\n\n      setTasks(newTasks);\n    } else {\n      setTaskInput(target.value);\n    }\n  }\n\n  function addTask() {\n    if (taskInput) {\n      const newobj = {\n        id: tasks.length ? tasks[tasks.length - 1].id + 1 : 0,\n        task: taskInput,\n        finished: false,\n      };\n      setTasks((prevTasks) => [...prevTasks, newobj]);\n      setTaskInput('');\n      setTaskBeingEdited(null);\n    }\n  }\n\n  function deleteTask(index) {\n    const newTasks = tasks.filter((task) => task.id !== index);\n\n    setTasks(newTasks);\n    setTaskBeingEdited(null);\n  }\n\n  function editTask(index, ref) {\n    setTaskBeingEdited(index);\n    focusOnEdit(ref);\n\n    function focusOnEdit(focusTarget) {\n      focusTarget.current.focus();\n    }\n  }\n\n  function finishTask(index) {\n    setTasks((prevTasks) => {\n      return prevTasks.map((prevTask) => {\n        if (prevTask.id === index) {\n          prevTask.finished = true;\n        }\n\n        return prevTask;\n      });\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      <Input\n        value={taskInput}\n        text=\"Add\"\n        onChange={handleChange}\n        onClick={addTask}\n        placeholder=\"Cook dinner\"\n      />\n      <div className=\"App__section\">\n        <h3>Unfinished tasks üéØ</h3>\n        {(tasks && taskBeingEdited === null && (\n          <TaskList\n            tasks={tasks}\n            enableEdit={editTask}\n            deleteTask={deleteTask}\n            finishTask={finishTask}\n            areFinished={false}\n          />\n        )) ||\n          (tasks && taskBeingEdited !== null && (\n            <TaskList\n              tasks={tasks}\n              enableEdit={editTask}\n              deleteTask={deleteTask}\n              editIndex={taskBeingEdited}\n              handleEdit={handleChange}\n              disableEdit={() => setTaskBeingEdited(null)}\n              areFinished={false}\n            />\n          ))}\n      </div>\n\n      <div className=\"App__section\">\n        <h3>Finished tasks ‚úîÔ∏è</h3>\n        <TaskList tasks={tasks} deleteTask={deleteTask} areFinished={true} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}